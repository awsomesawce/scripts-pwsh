Import-Module posh-git
Import-Module oh-my-posh
# set psdir variable to local powershell directory, and set other variables.
$psDir="D:/Carl/Documents/Powershell"
$gitDir="D:/Carl/Documents/GitHub"
$oneDrive="D:/Carl/OneDrive"
$localAppData="C:/Users/Carl/AppData/Local/"
$globalAppData="D:/Carl/Appdata"
$psProfileFile='D:/Carl/Documents/Powershell/Microsoft.Powershell_profile.ps1'
# Aliases
# use single-quotes for strings with spaces
Function lsWide {Get-ChildItem | Format-Wide}
Function lsTable {Get-ChildItem | Format-Table}
Set-Alias -Name lsw -Value lsWide -Description 'ls but format-wide'
Set-Alias -Name list -Value Get-ChildItemColorFormatWide
#Set-Theme ys
#Set-Theme pure
Set-Theme PowerlinePlus # While in admin mode, this theme correctly displays the prompt
#Set-Theme Powerlevel9k
#et-Theme agnoster
#Set-Theme zash
# pshazz theme - auto-generated by pshazz
#try { $null = Get-Command pshazz -ea stop; pshazz init 'default' } catch { }

## Open Powershell profile from anywhere
Function psconfig {joe $psDir\Microsoft.Powershell_profile.ps1}

Set-Alias -Name np -Value C:\Windows\notepad.exe
# This one sets an alias for the ri command in ruby
set-alias -name rubyri -value D:\Ruby27-x64\bin\ri.cmd -Description "A workaround for ruby's ri, cuz in pwsh ri is remove-item"
Set-Alias -Name exp -Value explorer
Set-Alias -Name cygman -Value D:\Cygwin\bin\man.exe -Description "Show info file from cygwin which includes a lot more documentation than the windows emacs info"
Set-Alias -Name lsc -Value Get-ChildItemColorFormatWide -Description "Better alias for color ls"
Set-Alias -Name rdis -Value rdiscount -Description "Shorter rdiscount"
Set-Alias -Name pd -Value pandoc -Description "Shorter Pandoc"
Set-Alias -Name msys -Value D:\MSYS2\msys2_shell.cmd -Description "Use --help for invoke options"
Set-Alias -Name git-cola -Value C:\Users\Carl\AppData\Local\git-cola\bin\git-cola.exe -Description "Git-cola because "
Set-Alias -Name cygbash -Value D:\Cygwin\bin\bash.exe -Description "Use man bash for help"
Set-Alias -Name cygtcsh -Value D:\Cygwin\bin\tcsh.exe -Description "Cygwin's tcsh"
## Functions

# Next is a function that allows me to change to my powershell directory where my profile is.
Function PSDir {Set-Location -Path D:\carl\documents\PowerShell\}

# This is just a function to cd to my notes dir
Function NotesDir {Set-Location -Path D:\Carl\Onedrive\Notable\Notes}
# Set-Alias to make notes dir even more easily accessible
  Set-Alias -Name ndir -Value NotesDir
# Function for invoking ubuntu wsl with carlc user and zsh shell
Function wslme {wsl -d Ubuntu-20.04 -u carlc -e zsh}
# Function to get to standard parent git directory
Function gitdir {Set-Location -Path D:\Carl\Documents\GitHub}
# get to emacs org directory located in OneDrive quickly.
Function org_dir {Set-Location -Path $oneDrive\org_dir}
# This is a function for git status, not Get-GitStatus, which is a posh-git cmdlet.
function gitst {git status}
Function gpgmee {gpg -se -r Carl}
Function localAppData {Set-Location -Path C:\Users\Carl\AppData\Local}
Function globalAppData {Set-Location -Path D:\Carl\AppData}
Function gcift {Get-ChildItem | Format-Table}
Function npmDoc {Set-Location -Path 'C:\Program Files\nodejs\node_modules\npm\docs'}
# Backup folder for dotfiles in both Windows and Ubuntu
Function dotfiles_backup {Set-Location -Path $oneDrive\dotfiles_backup}
# Easily page thru long ls lists
Function lspage {ls | less}
Set-Alias -name lsless -Value lspage
Set-Alias -Name lsl -Value lspage
# Easily page thru get-help output
Function helpless {Get-Help $1 | less}
# Easily open powershell profile in fvim
Function psProfileEdit {ii D:\Carl\Documents\Powershell\Microsoft.Powershell_profile.ps1}
Set-Alias -Name dotdir -Value dotfiles_backup
Set-Alias -name localad -Value localappdata
Set-Alias -Name gitbash -Value 'D:\Program Files\Git\bin\bash.exe'
Set-Alias -Name ... -Value D:\Carl\Documents\PowerShell\Scripts\backwards_cd.ps1
Set-Alias -Name .. -Value D:\Carl\Documents\PowerShell\Scripts\backwards_cd1.ps1
Set-Alias -name ipinfo -Value D:\Carl\Documents\PowerShell\Scripts\getipinfo.ps1
Set-alias -Name invo -Value Invoke-Item -description "Shorter invoke-item"
#node C:\Users\Carl\node_modules\which\bin\node-which
# Alias for Get-GitStatus function provided by posh-git
set-alias -Name gitstat -Value Get-GitStatus
Set-Alias -Name list -Value Get-ChildItemColor
# Above makes the ls command always use Get-ChildItemColor
# This attaches the rename command to rename item
# ren is also an alias for rename-item
Set-Alias -Name rename -Value Rename-Item -Description "A smart rename alias"
# Invoke the starship prompt engine
#Invoke-Expression (&starship init powershell)
# Source the gh completion script for pwsh.  12/06/2020 does not work currently but loads just fine with no errors.
. $psDir\Scripts\gh_compPowershell.ps1
